{"version":3,"sources":["components/Home/Home.jsx","components/In-Game/Mob.js","components/In-Game/MobPaths.js","components/In-Game/ControlMobSize.js","components/In-Game/CharactersEvent.js","components/In-Game/Characters.js","components/In-Game/objects/rock.js","components/In-Game/objects/SeaAnemone.js","components/In-Game/objects/Seaweed.js","components/In-Game/Maps.js","components/In-Game/videoSetting.js","components/In-Game/Game.jsx","components/App.jsx","index.js"],"names":["Home","Mob1","center","reverse","arguments","length","undefined","size","this","group","paper","Group","id","uuidv4","ratio","width","height","hideTime","selectedPath","t","currentPoint","constructor","_this$_makeBodypatter","_makeBodypatterns","bodyPattern1","bodyPattern2","bodyPattern3","_this$_makeEyeAndPupi","_makeEyeAndPupil","eye","pupil","sizeTag","_makeSizeTag","addChild","_makeFin","makeBody","bounds","position","x","y","fin","Path","fillColor","strokeColor","strokeWidth","curves","handle1","handle2","setReverse","isReverse","scale","getReverse","body","Circle","strokeCap","PointText","fontSize","fontFamily","content","toString","moveSizeTag","topCenter","toFixed","removeSizeTag","remove","paths","moveMobInBezierCurve","points","ball","_points","Object","slicedToArray","p0","p1","p2","p3","cx","bx","ax","cy","by","ay","speed","xt","yt","controlMobSize","second","minMobSize","maxMobSize","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","from","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","userState","isObstacle","velX","velY","friction","limitedTime","screenSize","window","innerWidth","innerHeight","startyMovementHandler","event","preventDefault","createTimer","timer","screen","availWidth","availHeight","updateAndFixTimer","time","tx","ty","leftTime","Math","round","topLeft","bringToFront","screenResized","resizedWidth","resizedHeight","showGameOver","transparentBackground","Rectangle","opacity","gameOverPhrase","fontWeight","loseTransparentBackground","isGameOver","gameOver","myCharacter","_showGameOver","gameOverState","getSize","_showGameOver2","_showGameOver3","isGameWin","gameWin","_showGameWin","gameWinPhrase","winTransparentBackground","showGameWin","gameWinState","_gameStart","asyncToGenerator","_callee2","mode","video","mapSize","mobs","obstacles","attackers","hiders","prevTime","imageSize","_ref","motionFrame","down","straight","up","leftReverse","rightReverse","_ref2","createMotionFrame","createMotion","updateTimerAndPhrasePosition","update","_update","_context2","_callee","_controlMobSize","randomPlace","randomSize","mob","nextPosition","isXChanged","isYChanged","_getMatrix","_screenResized2","_isGameOver","_isGameWin","_context","console","log","floor","random","filter","index","map","prevMobPosition","centerX","centerY","prevX","prevY","mobMovedPosition","x1","y1","x2","y2","mobMovementAngle","atan2","PI","getPosition","obstacle","_step","_iterator","getItems","pathItem","point","getItem","getIntersections","view","matrix","intersects","setSize","hider","contains","_step2","_iterator2","visible","attacker","rx","ry","translate","cancelAnimationFrame","requestAnimationFrame","apply","_x9","_x10","phrase","_screenResized","leftKnee","selected","rightKnee","document","createElement","left","right","Starty","head","startyBody","_makeBody","startyTail","_makeTail","startyFin","startyEye","startyPupil","startyMouth","_makeMouth","_makeBodyFin","_makeTailFin","addEventListener","setPosition","closed","start","end","startyBodyFin","curve","point1X","point2X","startyTailFin","rotate","bottomLeft","SideStone","degree","stonePath","smooth","controlOverscreenCurves","Stone","SeaAnemone","createBody","createTentacle","createBelly","bottomCenter","removeSegment","tentacle","tentaclone","clone","belly","Seaweed","path","testMap","rect","videoSetting_regeneratorRuntime","_videoSetting","cameraOptions","selectedIndex","getCameraSelection","_getCameraSelection","options","selectedCamera","contraints","stream","devices","videoDevices","navigator","mediaDevices","enumerateDevices","device","kind","videoDevice","concat","deviceId","label","current","innerHTML","join","max","exact","getUserMedia","srcObject","videoSetting","_x","_x2","_x3","Game","useRef","location","href","split","at","canvas","prevScreenSize","canvasSetup","setup","_testMap","starty","_x4","_x5","_x6","_x7","_x8","gameStart","useEffect","handleResize","react_default","a","style","className","ref","autoPlay","onChange","target","App","In_Game_Game","ReactDOM","createRoot","getElementById","render","components_App"],"mappings":"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","file":"static/js/main.4cb24934.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport SettingButton from \"./SettingButton\";\r\nimport ModechageButton from \"./ModeChangeButton\";\r\nimport Footer from \"./Footer\";\r\nimport Main from \"./Main\";\r\nimport Header from \"./Header\";\r\n// import \"./css/index.css\";\r\n\r\nfunction Home () {\r\n    const [mode, setMode] = useState(\"keyboard\");\r\n\r\n    function handleModeChange () {\r\n        setMode(function (prev) {\r\n            const currentMode = (prev === \"keyboard\") ? \"exercise\" : \"keyboard\";\r\n            return currentMode;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {/* <SettingButton /> */}\r\n            <Header mode={ mode } />\r\n            <Main mode={ mode } />\r\n            {/* <ModechageButton currentMode={ mode } changeMode={ handleModeChange } /> */}\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;","import { v4 as uuidv4 } from \"uuid\";\r\nimport paper from \"paper\";\r\n\r\nfunction Mob1 (center, reverse = true, size) {\r\n    this.center = center;\r\n    this.group = new paper.Group();\r\n    this.id = uuidv4();\r\n    this.reverse = reverse;\r\n    this.size = size;\r\n    this.ratio = { width: 1, height: 0.5688288 };\r\n    this.hideTime = 0;\r\n    this.selectedPath = null;\r\n    this.t = 0;\r\n    this.currentPoint = 0;\r\n\r\n\r\n\r\n    this.constructor = function () {\r\n        this.group = new paper.Group();\r\n        const { bodyPattern1, bodyPattern2, bodyPattern3 } = this._makeBodypatterns();\r\n        const { eye, pupil } = this._makeEyeAndPupil();\r\n        this.sizeTag = this._makeSizeTag();\r\n\r\n        this.group.addChild(this._makeFin());\r\n        this.group.addChild(this.makeBody());\r\n        this.group.addChild(bodyPattern1);\r\n        this.group.addChild(bodyPattern2);\r\n        this.group.addChild(bodyPattern3);\r\n        this.group.addChild(eye);\r\n        this.group.addChild(pupil);\r\n\r\n        this.group.bounds.width = this.ratio.width * this.size;\r\n        this.group.bounds.height = this.ratio.height * this.size;\r\n        this.group.position.x = center.x;\r\n        this.group.position.y = center.y;\r\n    };\r\n\r\n\r\n    this._makeFin = function () {\r\n        let fin = new paper.Path([center.x - 37.25, center.y - 33.7], [center.x - 47.25, center.y - 53.3], [center.x + 56.25, center.y - 7.3], [center.x + 86.25, center.y - 23.3], [center.x + 86.25, center.y + 51.7], [center.x + 56.25, center.y + 26.7], [center.x + 51.25, center.y + 26.7], [center.x + 19.25, center.y + 41.7]);\r\n        // fin.selected = true;\r\n        fin.fillColor = \"#F6D30E\";\r\n        fin.strokeColor = \"black\";\r\n        fin.strokeWidth = 3;\r\n        fin.curves[0].handle1.x = 2;\r\n        fin.curves[0].handle2.x = 2;\r\n        fin.curves[1].handle1.x = 100;\r\n        fin.curves[1].handle2.y = -15;\r\n        fin.curves[2].handle1.y = -12;\r\n        fin.curves[3].handle1.x = 10;\r\n        fin.curves[3].handle2.x = 10;\r\n        fin.curves[4].handle2.y = 12;\r\n        fin.curves[6].handle1.y = 20;\r\n        fin.curves[6].handle2.y = 25;\r\n\r\n\r\n\r\n\r\n        return fin;\r\n    };\r\n\r\n    this.setReverse = function (isReverse = false) {\r\n        if ((isReverse && !this.isReverse) || (!isReverse && this.isReverse)) {\r\n            this.group.scale(-1, 1);\r\n        } else {\r\n            this.group.scale(1, 1);\r\n        }\r\n\r\n        this.isReverse = isReverse;\r\n\r\n    };\r\n\r\n    this.getReverse = function () {\r\n        return this.isReverse;\r\n    };\r\n\r\n    this.makeBody = function () {\r\n\r\n\r\n        let body = new paper.Path([center.x - 93.75, center.y + 11.7], [center.x + 56.25, center.y + 11.7], [center.x - 93.75, center.y + 11.7]);\r\n\r\n\r\n        // body.selected = true;\r\n\r\n        body.strokeColor = \"black\";\r\n        body.strokeWidth = 3;\r\n        body.curves[0].handle1.y = 45;\r\n        body.curves[0].handle2.y = 45;\r\n        body.curves[1].handle1.y = -65;\r\n        body.curves[1].handle2.y = -65;\r\n        body.fillColor = \"#44A2F3\";\r\n\r\n        return body;\r\n    };\r\n\r\n    this._makeBodypatterns = function () {\r\n\r\n        let bodyPattern1 = new paper.Path([center.x - 66.75, center.y - 26.3], [center.x - 66.75, center.y + 37.7], [center.x - 49.75, center.y + 42.7], [center.x - 49.75, center.y - 32.3]);\r\n\r\n        let bodyPattern2 = new paper.Path([center.x - 26.75, center.y - 36.3], [center.x - 26.75, center.y + 45.7], [center.x - 8.75, center.y + 45.7], [center.x - 8.75, center.y - 36.3]);\r\n\r\n        let bodyPattern3 = new paper.Path([center.x + 21.25, center.y - 30.3], [center.x + 21.25, center.y + 39.7], [center.x + 31.25, center.y + 36.7], [center.x + 31.25, center.y - 24.3]);\r\n\r\n        // bodypattern 1 style setup\r\n        bodyPattern1.fillColor = \"#F6D30E\";\r\n        bodyPattern1.strokeColor = \"black\";\r\n        bodyPattern1.strokeWidth = 3;\r\n        bodyPattern1.curves[0].handle1.x = 15;\r\n        bodyPattern1.curves[0].handle2.x = 8;\r\n        bodyPattern1.curves[2].handle2.x = 13;\r\n        bodyPattern1.curves[2].handle1.x = 15;\r\n\r\n        // bodypattern 2 style setup\r\n        bodyPattern2.fillColor = \"#F6D30E\";\r\n        bodyPattern2.strokeColor = \"black\";\r\n        bodyPattern2.strokeWidth = 3;\r\n        bodyPattern2.curves[0].handle1.x = 15;\r\n        bodyPattern2.curves[0].handle2.x = 15;\r\n        bodyPattern2.curves[2].handle2.x = 13;\r\n        bodyPattern2.curves[2].handle1.x = 20;\r\n\r\n\r\n\r\n        // bodypattern 3 style setup\r\n        bodyPattern3.fillColor = \"#F6D30E\";\r\n        bodyPattern3.strokeColor = \"black\";\r\n        bodyPattern3.strokeWidth = 3;\r\n        bodyPattern3.curves[0].handle1.x = 16;\r\n        bodyPattern3.curves[0].handle2.x = 8;\r\n        bodyPattern3.curves[2].handle2.x = 20;\r\n        bodyPattern3.curves[2].handle1.x = 16;\r\n\r\n\r\n\r\n        return { bodyPattern1: bodyPattern1, bodyPattern2: bodyPattern2, bodyPattern3: bodyPattern3 };\r\n    };\r\n\r\n\r\n    this._makeEyeAndPupil = function () {\r\n        let eye = new paper.Path.Circle([center.x - 76.75, center.y - 1.7], 10);\r\n        eye.fillColor = \"white\";\r\n        let pupil = new paper.Path([eye.position.x - 5, eye.position.y + 3], [eye.position.x + 5, eye.position.y + 3]);\r\n\r\n        // pupil.selected = true;\r\n        pupil.strokeColor = \"black\";\r\n        pupil.strokeCap = \"round\";\r\n        pupil.strokeWidth = 3;\r\n        pupil.curves[0].handle1.y = -8;\r\n        pupil.curves[0].handle2.y = -8;\r\n\r\n        return { eye, pupil };\r\n    };\r\n\r\n    \r\n    this._makeSizeTag = function(){\r\n        const sizeTag = new paper.PointText();\r\n        sizeTag.fillColor = \"black\";\r\n        sizeTag.fontSize = 18;\r\n        sizeTag.fontFamily = \"'Dangrek', cursive\";\r\n        sizeTag.content = size.toString();\r\n\r\n        return sizeTag;\r\n    }\r\n\r\n\r\n    this.moveSizeTag = function(){\r\n        this.sizeTag.bounds.center.x = this.group.bounds.topCenter.x;\r\n        this.sizeTag.bounds.center.y = this.group.bounds.topCenter.y - 15;\r\n        this.sizeTag.content = this.size.toFixed(0).toString();\r\n    }\r\n\r\n    this.removeSizeTag = function(){\r\n        this.sizeTag.remove();\r\n    }\r\n\r\n    this.constructor();\r\n}\r\n\r\n\r\n\r\n\r\nexport { Mob1 };","import paper from \"paper\";\r\n// start : x : 100, y : 0\r\nconst path1 = [[\r\n    { x: 100, y: 0 },\r\n    { x: 120, y: 200 },\r\n    { x: 125, y: 295 },\r\n    { x: 170, y: 350 }\r\n], [\r\n    { x: 170, y: 350 },\r\n    { x: 320, y: 500 },\r\n    { x: 550, y: 500 },\r\n    { x: 800, y: 630 }\r\n], [\r\n    { x: 800, y: 630 },\r\n    { x: 820, y: 650 },\r\n    { x: 900, y: 550 },\r\n    { x: 1000, y: 700 }\r\n], [\r\n    { x: 1000, y: 700 },\r\n    { x: 1220, y: 770 },\r\n    { x: 1400, y: 800 },\r\n    { x: 1600, y: 750 }\r\n], [\r\n    { x: 1600, y: 750 },\r\n    { x: 1750, y: 770 },\r\n    { x: 1950, y: 780 },\r\n    { x: 2200, y: 550 }\r\n], [\r\n    { x: 2200, y: 550 },\r\n    { x: 2750, y: 550 },\r\n    { x: 3000, y: 480 },\r\n    { x: 2920, y: 50 }\r\n], [\r\n    { x: 2920, y: 50 },\r\n    { x: 2750, y: -450 },\r\n    { x: 3000, y: -460 },\r\n    { x: 2320, y: -550 }\r\n], [\r\n    { x: 2320, y: -550 },\r\n    { x: 2150, y: -550 },\r\n    { x: 1800, y: -760 },\r\n    { x: 1520, y: -750 }\r\n], [\r\n    { x: 1520, y: -750 },\r\n    { x: 1300, y: -750 },\r\n    { x: 1000, y: -460 },\r\n    { x: 850, y: -550 }\r\n], [\r\n    { x: 850, y: -550 },\r\n    { x: 740, y: -690 },\r\n    { x: 650, y: -560 },\r\n    { x: 600, y: -510 }\r\n], [\r\n    { x: 600, y: -510 },\r\n    { x: 180, y: -490 },\r\n    { x: 130, y: -160 },\r\n    { x: 100, y: 0 }\r\n]\r\n];\r\n\r\n\r\n\r\n\r\nconst path2 = [\r\n    [\r\n        { x: 100, y: 0 },\r\n        { x: 400, y: 300 },\r\n        { x: 700, y: 500 },\r\n        { x: 1000, y: 500 }\r\n    ],\r\n    [\r\n        { x: 1000, y: 500 },\r\n        { x: 1200, y: 500 },\r\n        { x: 1400, y: 300 },\r\n        { x: 1650, y: 335 }\r\n    ],\r\n    [\r\n        { x: 1650, y: 335 },\r\n        { x: 1700, y: 350 },\r\n        { x: 2600, y: 600 },\r\n        { x: 2700, y: 0 }\r\n    ],\r\n    [\r\n        { x: 2700, y: 0 },\r\n        { x: 2600, y: -700 },\r\n        { x: 1800, y: -600 },\r\n        { x: 1500, y: -500 }\r\n    ],\r\n    [\r\n        { x: 1500, y: -500 },\r\n        { x: 1300, y: -500 },\r\n        { x: 400, y: -400 },\r\n        { x: 100, y: 0 }\r\n    ]\r\n];\r\n\r\nconst path3 = [\r\n    [\r\n        { x: 100, y: 0 },\r\n        { x: 400, y: -800 },\r\n        { x: 1300, y: -300 },\r\n        { x: 1500, y: -600 }\r\n    ],\r\n    [\r\n        { x: 1500, y: -600 },\r\n        { x: 1700, y: -800 },\r\n        { x: 2200, y: -400 },\r\n        { x: 2400, y: -200 }\r\n    ],\r\n    [\r\n        { x: 2400, y: -200 },\r\n        { x: 2900, y: 0 },\r\n        { x: 2900, y: 300 },\r\n        { x: 2400, y: 330 }\r\n    ],\r\n    [\r\n        { x: 2400, y: 330 },\r\n        { x: 2200, y: 330 },\r\n        { x: 1700, y: 850 },\r\n        { x: 1550, y: 750 }\r\n    ],\r\n    [\r\n        { x: 1550, y: 750 },\r\n        { x: 1300, y: 430 },\r\n        { x: 300, y: 650 },\r\n        { x: 100, y: 0 }\r\n    ]\r\n];\r\n\r\n\r\nconst path4 = [\r\n    [\r\n        { x: 100, y: 0 },\r\n        { x: 400, y: 300 },\r\n        { x: 700, y: 200 },\r\n        { x: 1000, y: 320 }\r\n    ],\r\n    [\r\n        { x: 1000, y: 320 },\r\n        { x: 700, y: 600 },\r\n        { x: 400, y: 500 },\r\n        { x: 300, y: 450 }\r\n    ], [\r\n        { x: 300, y: 450 },\r\n        { x: 200, y: 150 },\r\n        { x: 0, y: -50 },\r\n        { x: 500, y: -200 }\r\n    ], [\r\n        { x: 500, y: -200 },\r\n        { x: 1000, y: -450 },\r\n        { x: 1900, y: -500 },\r\n        { x: 2400, y: -340 }\r\n    ],\r\n    [\r\n        { x: 2400, y: -340 },\r\n        { x: 3200, y: 0 },\r\n        { x: 2800, y: 200 },\r\n        { x: 2550, y: 500 }\r\n    ],\r\n    [\r\n        { x: 2550, y: 500 },\r\n        { x: 2200, y: 700 },\r\n        { x: 1500, y: 300 },\r\n        { x: 900, y: 500 }\r\n    ],\r\n    [\r\n        { x: 900, y: 500 },\r\n        { x: 700, y: 600 },\r\n        { x: 200, y: 200 },\r\n        { x: 100, y: 0 }\r\n    ]\r\n];\r\n\r\n\r\n\r\n// start : x : 2972, y : 0\r\nconst path5 = [\r\n    [\r\n        { x: 2972, y: 0 },\r\n        { x: 2700, y: 0 },\r\n        { x: 2500, y: -100 },\r\n        { x: 2350, y: -200 }\r\n    ],\r\n    [\r\n        { x: 2350, y: -200 },\r\n        { x: 2000, y: -400 },\r\n        { x: 1200, y: -500 },\r\n        { x: 850, y: -270 }\r\n    ],\r\n    [\r\n        { x: 850, y: -270 },\r\n        { x: 700, y: -200 },\r\n        { x: 800, y: -500 },\r\n        { x: 340, y: -480 }\r\n    ],\r\n    [\r\n        { x: 340, y: -480 },\r\n        { x: -50, y: -350 },\r\n        { x: 400, y: -50 },\r\n        { x: 540, y: 130 }\r\n    ],\r\n    [\r\n        { x: 540, y: 130 },\r\n        { x: 800, y: 400 },\r\n        { x: 1400, y: 600 },\r\n        { x: 1600, y: 600 }\r\n    ],\r\n    [\r\n        { x: 1600, y: 600 },\r\n        { x: 1800, y: 400 },\r\n        { x: 2500, y: 600 },\r\n        { x: 2972, y: 0 }\r\n    ]\r\n];\r\n\r\n\r\nconst path6 = [\r\n    [\r\n        { x: 2972, y: 0 },\r\n        { x: 2500, y: -400 },\r\n        { x: 2100, y: -700 },\r\n        { x: 1600, y: -720 }\r\n    ],\r\n    [\r\n        { x: 1600, y: -720 },\r\n        { x: 1200, y: -700 },\r\n        { x: 800, y: -400 },\r\n        { x: 400, y: -50 }\r\n    ],\r\n    [\r\n        { x: 400, y: -50 },\r\n        { x: 450, y: 200 },\r\n        { x: 900, y: 600 },\r\n        { x: 1200, y: 560 }\r\n    ],\r\n    [\r\n        { x: 1200, y: 560 },\r\n        { x: 1600, y: 530 },\r\n        { x: 2100, y: 600 },\r\n        { x: 2500, y: 300 }\r\n    ],\r\n    [\r\n        { x: 2500, y: 300 },\r\n        { x: 2600, y: 200 },\r\n        { x: 2800, y: 100 },\r\n        { x: 2972, y: 0 }\r\n    ]\r\n\r\n];\r\n\r\n\r\nconst path7 = [\r\n    [\r\n        { x: 2972, y: 0 },\r\n        { x: 2600, y: 600 },\r\n        { x: 2000, y: 600 },\r\n        { x: 1700, y: 500 }\r\n    ],\r\n    [\r\n        { x: 1700, y: 500 },\r\n        { x: 1300, y: 400 },\r\n        { x: 750, y: 600 },\r\n        { x: 250, y: 150 }\r\n    ],\r\n    [\r\n        { x: 250, y: 150 },\r\n        { x: 550, y: -800 },\r\n        { x: 1250, y: -300 },\r\n        { x: 1550, y: -550 }\r\n    ],\r\n    [\r\n        { x: 1550, y: -550 },\r\n        { x: 1850, y: -800 },\r\n        { x: 2672, y: 0 },\r\n        { x: 2972, y: 0 }\r\n    ]\r\n];\r\n\r\nconst path8 = [\r\n    [\r\n        { x: 2972, y: 0 },\r\n        { x: 2500, y: 400 },\r\n        { x: 2100, y: 300 },\r\n        { x: 1700, y: 335 }\r\n    ],\r\n    [\r\n        { x: 1700, y: 335 },\r\n        { x: 1400, y: 400 },\r\n        { x: 470, y: 500 },\r\n        { x: 170, y: 335 }\r\n    ],\r\n    [\r\n        { x: 170, y: 335 },\r\n        { x: 40, y: 100 },\r\n        { x: 400, y: -400 },\r\n        { x: 800, y: -450 }\r\n    ],\r\n    [\r\n        { x: 800, y: -450 },\r\n        { x: 1500, y: -600 },\r\n        { x: 2200, y: -400 },\r\n        { x: 2972, y: 0 }\r\n    ]\r\n];\r\n\r\n\r\nconst path9 = [\r\n    [\r\n        { x: 1536, y: 724 },\r\n        { x: 1336, y: 800 },\r\n        { x: 1100, y: 600 },\r\n        { x: 770, y: 600 }\r\n    ],\r\n    [\r\n        { x: 770, y: 600 },\r\n        { x: 500, y: 530 },\r\n        { x: 350, y: 500 },\r\n        { x: 150, y: 300 }\r\n    ],\r\n    [\r\n        { x: 150, y: 300 },\r\n        { x: 100, y: 200 },\r\n        { x: 250, y: -350 },\r\n        { x: 700, y: -580 }\r\n    ],\r\n    [\r\n        { x: 700, y: -580 },\r\n        { x: 1200, y: -600 },\r\n        { x: 1800, y: -750 },\r\n        { x: 2300, y: -550 }\r\n    ],\r\n    [\r\n        { x: 2300, y: -550 },\r\n        { x: 2700, y: -400 },\r\n        { x: 3000, y: 200 },\r\n        { x: 2472, y: 400 }\r\n    ],\r\n    [\r\n        { x: 2472, y: 400 },\r\n        { x: 2200, y: 500 },\r\n        { x: 1700, y: 700 },\r\n        { x: 1536, y: 724 }\r\n    ]\r\n];\r\n\r\n\r\nconst path10 = [\r\n    [\r\n        { x: 1536, y: 724 },\r\n        { x: 1536, y: 0 },\r\n        { x: 2200, y: 600 },\r\n        { x: 2600, y: 300 }\r\n    ],\r\n    [\r\n        { x: 2600, y: 300 },\r\n        { x: 2800, y: 100 },\r\n        { x: 2800, y: -100 },\r\n        { x: 2300, y: -250 }\r\n    ],\r\n    [\r\n        { x: 2300, y: -250 },\r\n        { x: 1800, y: -600 },\r\n        { x: 1000, y: -500 },\r\n        { x: 500, y: -350 }\r\n    ],\r\n    [\r\n        { x: 500, y: -350 },\r\n        { x: -50, y: 0 },\r\n        { x: 200, y: 300 },\r\n        { x: 1536, y: 724 }\r\n    ],\r\n\r\n];\r\n\r\nconst path11 = [\r\n    [\r\n        { x: 1536, y: 724 },\r\n        { x: 1200, y: 400 },\r\n        { x: 400, y: 400 },\r\n        { x: 100, y: 0 }\r\n    ],\r\n    [\r\n        { x: 100, y: 0 },\r\n        { x: 700, y: -200 },\r\n        { x: 1700, y: -700 },\r\n        { x: 2300, y: -550 }\r\n    ],\r\n    [\r\n        { x: 2300, y: -550 },\r\n        { x: 3400, y: -200 },\r\n        { x: 2700, y: 300 },\r\n        { x: 2500, y: 470 }\r\n    ],\r\n    [\r\n        { x: 2500, y: 470 },\r\n        { x: 2200, y: 470 },\r\n        { x: 1800, y: 500 },\r\n        { x: 1536, y: 724 }\r\n    ]\r\n];\r\n\r\n\r\nconst path12 = [\r\n    [\r\n        { x: 1536, y: 724 },\r\n        { x: 1600, y: 400 },\r\n        { x: 2500, y: 400 },\r\n        { x: 2600, y: 200 }\r\n    ],\r\n    [\r\n        { x: 2600, y: 200 },\r\n        { x: 2300, y: 400 },\r\n        { x: 1000, y: 600 },\r\n        { x: 770, y: 600 }\r\n    ],\r\n    [\r\n        { x: 770, y: 600 },\r\n        { x: 0, y: 400 },\r\n        { x: 250, y: 0 },\r\n        { x: 350, y: 0 }\r\n    ],\r\n    [\r\n        { x: 350, y: 0 },\r\n        { x: 700, y: 400 },\r\n        { x: 1200, y: 300 },\r\n        { x: 1536, y: 724 }\r\n    ]\r\n];\r\n\r\n\r\nconst path13 = [\r\n    [\r\n        { x: 1536, y: -724 },\r\n        { x: 1000, y: -700 },\r\n        { x: 700, y: -600 },\r\n        { x: 200, y: -100 }\r\n    ],\r\n    [\r\n        { x: 200, y: -100 },\r\n        { x: 1000, y: -700 },\r\n        { x: 1500, y: -600 },\r\n        { x: 2300, y: -400 }\r\n    ],\r\n    [\r\n        { x: 2300, y: -400 },\r\n        { x: 2500, y: 0 },\r\n        { x: 2700, y: -300 },\r\n        { x: 2800, y: 40 }\r\n    ],\r\n    [\r\n        { x: 2800, y: 40 },\r\n        { x: 2200, y: -600 },\r\n        { x: 1600, y: -720 },\r\n        { x: 1536, y: -724 }\r\n    ]\r\n];\r\n\r\nconst path14 = [\r\n    [\r\n        { x: 1536, y: -724 },\r\n        { x: 1000, y: -300 },\r\n        { x: 700, y: -300 },\r\n        { x: 240, y: -100 }\r\n    ],\r\n    [\r\n        { x: 240, y: -100 },\r\n        { x: 400, y: 600 },\r\n        { x: 900, y: 500 },\r\n        { x: 1000, y: 500 }\r\n    ],\r\n    [\r\n        { x: 1000, y: 500 },\r\n        { x: 1700, y: 400 },\r\n        { x: 2000, y: 400 },\r\n        { x: 2700, y: 200 }\r\n    ],\r\n    [\r\n        { x: 2700, y: 200 },\r\n        { x: 2800, y: -400 },\r\n        { x: 2700, y: -400 },\r\n        { x: 2200, y: -600 }\r\n    ],\r\n    [\r\n        { x: 2200, y: -600 },\r\n        { x: 2000, y: -300 },\r\n        { x: 1700, y: -300 },\r\n        { x: 1536, y: -724 }\r\n    ]\r\n];\r\n// [path1, path2, path3, path4, path5];\r\nconst paths = [path1, path2, path3, path4, path5, path6, path7, path8, path9, path10, path11, path12, path13, path14];\r\n\r\n\r\nfunction moveMobInBezierCurve (points, ball) {\r\n    let [p0, p1, p2, p3] = points;\r\n\r\n    let cx = 3 * (p1.x - p0.x);\r\n    let bx = 3 * (p2.x - p1.x) - cx;\r\n    let ax = p3.x - p0.x - cx - bx;\r\n\r\n    let cy = 3 * (p1.y - p0.y);\r\n    let by = 3 * (p2.y - p1.y) - cy;\r\n    let ay = p3.y - p0.y - cy - by;\r\n\r\n    let t = ball.t;\r\n\r\n    ball.t += ball.speed;\r\n\r\n    let xt = ax * (t * t * t) + bx * (t * t) + cx * t + p0.x;\r\n    let yt = ay * (t * t * t) + by * (t * t) + cy * t + p0.y;\r\n\r\n\r\n    ball.x = xt;\r\n    ball.y = yt;\r\n\r\n    return ball;\r\n\r\n}\r\n\r\nfunction getMovementAngle (x1, y1, x2, y2) {\r\n    return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\r\n}\r\n\r\nlet prevPath = 0;\r\n\r\nfunction drawPath (path, currentPath) {\r\n    let testFish = { x: 100, y: 50, speed: 0.01, t: 0 };\r\n\r\n    path.forEach(function (points, index) {\r\n\r\n        points.forEach(function (point) {\r\n            const pointDot = new paper.Path.Circle([point.x, point.y], 3);\r\n            pointDot.fillColor = \"black\";\r\n            pointDot.selected = true;\r\n            const coordinate = new paper.PointText([point.x, point.y - 10]);\r\n            coordinate.content = `[${ point.x },${ point.y }]`;\r\n            coordinate.fillColor = \"black\";\r\n            coordinate.justification = \"center\";\r\n            coordinate.fontSize = 20;\r\n            coordinate.fontWeight = 5;\r\n        });\r\n\r\n        let currentPoints = points;\r\n        while (testFish.t < 1) {\r\n            let prevBall = Object.assign({}, testFish);\r\n\r\n            testFish = moveMobInBezierCurve(currentPoints, testFish);\r\n\r\n            if (prevPath !== currentPath) {\r\n                prevPath = currentPath;\r\n                prevBall = Object.assign({}, testFish);\r\n            }\r\n\r\n            const line = new paper.Path([prevBall.x, prevBall.y], [testFish.x, testFish.y]);\r\n            line.strokeWidth = 2;\r\n            line.strokeColor = \"black\";\r\n        }\r\n        prevPath = currentPath;\r\n        testFish.t = 0;\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport { moveMobInBezierCurve, paths, drawPath, getMovementAngle };","function controlMobSize (second) {\r\n    let minMobSize, maxMobSize;\r\n\r\n    if (0 < second && second <= 15) {\r\n        minMobSize = 50;\r\n        maxMobSize = 80;\r\n    } else if (15 < second && second <= 30) {\r\n        minMobSize = 80;\r\n        maxMobSize = 110;\r\n    } else if (30 < second && second <= 45) {\r\n        minMobSize = 100;\r\n        maxMobSize = 140;\r\n    } else if (45 < second && second <= 60) {\r\n        minMobSize = 100;\r\n        maxMobSize = 160;\r\n    } else if (60 < second && second <= 75) {\r\n        minMobSize = 130;\r\n        maxMobSize = 180;\r\n    } else if (75 < second && second <= 90) {\r\n        minMobSize = 130;\r\n        maxMobSize = 200;\r\n    } else if (90 < second && second <= 105) {\r\n        minMobSize = 130;\r\n        maxMobSize = 220;\r\n    } else if (105 < second && second <= 120) {\r\n        minMobSize = 150;\r\n        maxMobSize = 250;\r\n    } else if (120 < second && second <= 135) {\r\n        minMobSize = 180;\r\n        maxMobSize = 230;\r\n    } else if (135 < second) {\r\n        minMobSize = 230;\r\n        maxMobSize = 300;\r\n    }\r\n\r\n\r\n    return { minMobSize: minMobSize, maxMobSize: maxMobSize };\r\n}\r\n\r\n\r\nexport default controlMobSize; ","import { Mob1 } from \"./Mob\";\r\nimport paper from \"paper\";\r\nimport { paths } from \"./MobPaths\";\r\nimport { moveMobInBezierCurve, getMovementAngle } from \"./MobPaths\";\r\nimport controlMobSize from \"./ControlMobSize\";\r\n\r\n\r\n// object's position depending on the relative position of fish\r\nconst userState = { isObstacle: false, velX: 0, velY: 0, speed: 7, friction: 0.98, keys: {} };\r\nconst limitedTime = 200;\r\nconst screenSize = { width: window.innerWidth, height: window.innerHeight };\r\n\r\nfunction startyMovementHandler(event) {\r\n\r\n    event.preventDefault();\r\n\r\n\r\n    if (event.type === \"keydown\") {\r\n        userState.keys[event.key] = true;\r\n    }\r\n\r\n    if (event.type === \"keyup\") {\r\n        userState.keys[event.key] = false;\r\n\r\n    }\r\n\r\n    return;\r\n}\r\n\r\n\r\n\r\n\r\nfunction getMatrix(x1, y1, x2, y2) {\r\n    return { tx: x1 - x2, ty: y1 - y2 };\r\n}\r\n\r\n\r\nfunction createTimer() {\r\n    const timer = new paper.PointText([(window.screen.availWidth - window.innerWidth) / 2 + 20, (window.screen.availHeight - window.innerHeight) / 2 + 80]);\r\n    timer.fontSize = 80;\r\n    timer.fillColor = \"white\";\r\n    timer.fontFamily = \"'Dangrek', cursive\";\r\n    return timer;\r\n}\r\n\r\nfunction updateAndFixTimer(timer, time, tx, ty) {\r\n    // Get left time\r\n    const leftTime = limitedTime - Math.round(time / 1000);\r\n\r\n    // Set leftTime to timer\r\n    if (leftTime > 0) {\r\n        timer.content = (limitedTime - Math.round(time / 1000)).toString();\r\n    } else {\r\n        timer.content = \"0\";\r\n    }\r\n\r\n    // Change color of timer\r\n    if (leftTime < 60 && leftTime >= 30) {\r\n        timer.fillColor = \"orange\";\r\n    } else if (leftTime < 30) {\r\n        timer.fillColor = \"red\";\r\n    }\r\n\r\n    // Fix timer to top left side of the screen\r\n    timer.bounds.topLeft.x += tx;\r\n    timer.bounds.topLeft.y += ty;\r\n\r\n    timer.bringToFront();\r\n\r\n    return timer;\r\n}\r\n\r\nfunction screenResized() {\r\n    const resizedWidth = window.innerWidth - screenSize.width;\r\n    const resizedHeight = window.innerHeight - screenSize.height;\r\n\r\n    screenSize.width = window.innerWidth;\r\n    screenSize.height = window.innerHeight;\r\n\r\n    return { resizedHeight, resizedWidth }\r\n}\r\n\r\nfunction showGameOver(timer) {\r\n    const transparentBackground = new paper.Path.Rectangle([timer.bounds.topLeft.x - 20, timer.bounds.topLeft.y - 10], [window.screen.availWidth, window.screen.availHeight + 40]);\r\n    transparentBackground.fillColor = \"black\";\r\n    transparentBackground.opacity = 0.4;\r\n\r\n    const gameOverPhrase = new paper.PointText();\r\n    gameOverPhrase.fontSize = 150;\r\n    gameOverPhrase.content = \"G a m e  O v e r\";\r\n    gameOverPhrase.fontWeight = \"bold\";\r\n    gameOverPhrase.strokeWidth = 4;\r\n    gameOverPhrase.strokeColor = \"red\"\r\n    gameOverPhrase.fillColor = \"white\";\r\n    gameOverPhrase.fontFamily = \"'Dangrek', cursive\";\r\n    gameOverPhrase.bounds.center.x = timer.bounds.topLeft.x - 20 + (window.screen.availWidth / 2);\r\n    gameOverPhrase.bounds.center.y = timer.bounds.topLeft.y - 10 + ((window.screen.availHeight + 40) / 2);\r\n\r\n    return { loseTransparentBackground: transparentBackground, gameOverPhrase };\r\n\r\n}\r\n\r\n\r\nfunction showGameWin(timer) {\r\n    const transparentBackground = new paper.Path.Rectangle([timer.bounds.topLeft.x - 20, timer.bounds.topLeft.y - 10], [window.screen.availWidth, window.screen.availHeight + 40]);\r\n    transparentBackground.fillColor = \"black\";\r\n    transparentBackground.opacity = 0.4;\r\n\r\n    const gameWinPhrase = new paper.PointText();\r\n    gameWinPhrase.fontSize = 150;\r\n    gameWinPhrase.content = \"G a m e  W i n !\";\r\n    gameWinPhrase.fontWeight = \"bold\";\r\n    gameWinPhrase.strokeWidth = 4;\r\n    gameWinPhrase.strokeColor = \"yellow\"\r\n    gameWinPhrase.fillColor = \"green\";\r\n    gameWinPhrase.fontFamily = \"'Dangrek', cursive\";\r\n    gameWinPhrase.bounds.center.x = timer.bounds.topLeft.x - 20 + (window.screen.availWidth / 2);\r\n    gameWinPhrase.bounds.center.y = timer.bounds.topLeft.y - 10 + ((window.screen.availHeight + 40) / 2);\r\n\r\n    return { winTransparentBackground: transparentBackground, gameWinPhrase };\r\n}\r\n\r\nfunction isGameOver(gameOver, timer, myCharacter) {\r\n    if (timer.content === \"0\") {\r\n        const { loseTransparentBackground, gameOverPhrase } = showGameOver(timer);\r\n        return { gameOverState: !gameOver, loseTransparentBackground, gameOverPhrase };\r\n    }\r\n\r\n    if (myCharacter.getSize() < 50) {\r\n        const { loseTransparentBackground, gameOverPhrase } = showGameOver(timer);\r\n        return { gameOverState: !gameOver, loseTransparentBackground, gameOverPhrase };\r\n    }\r\n\r\n    if(gameOver){\r\n        const { loseTransparentBackground, gameOverPhrase } = showGameOver(timer);\r\n        return { gameOverState: gameOver, loseTransparentBackground, gameOverPhrase };\r\n    }\r\n\r\n    return { gameOverState: gameOver, loseTransparentBackground: undefined, gameOverPhrase: undefined };\r\n}\r\n\r\nfunction isGameWin(gameWin, timer, myCharacter) {\r\n    if (myCharacter.getSize() >= 300 && timer.content !== \"0\") {\r\n        const { winTransparentBackground, gameWinPhrase } = showGameWin(timer);\r\n        return { gameWinState: !gameWin, winTransparentBackground, gameWinPhrase };\r\n    }\r\n    return { gameWinState: gameWin, winTransparentBackground: undefined, gameWinPhrase: undefined };\r\n}\r\n\r\n\r\n\r\nasync function gameStart(mode, video, myCharacter, mapSize, mobs, obstacles, attackers, hiders) {\r\n\r\n\r\n    let gameOver = false;\r\n    let gameWin = false;\r\n    let hideTime = 0;\r\n    let prevTime = -10001;\r\n    // const worker = new Worker(process.env.PUBLIC_URL + '/worker.js');\r\n    const tmpCanvas = document.createElement(\"canvas\");\r\n    const imageSize = { width: 320, height: 240 };\r\n    let receievedKeyPoints;\r\n    let isExecuted = false;\r\n    let firstPosition = 0;\r\n    let movement = \"\";\r\n    const screen1 = new paper.PointText();\r\n    const state = { left: false, right: false };\r\n    let countWalk = 0;\r\n    let isReverse = false;\r\n    const { motionFrame, down, straight, up, leftReverse, rightReverse } = (mode === \"exercise\") ? createMotionFrame() : { motionFrame: null, down: null, straight: null, up: null, leftReverse: null, rightReverse: null };\r\n    const { leftKnee, rightKnee } = (mode === \"exercise\") ? createMotion() : { leftKnee: null, rightKnee: null };\r\n    let timer = createTimer();\r\n\r\n    /*  Test Making path using Bezier curve*/\r\n    // paths.forEach(function (path, index) {\r\n    //     drawPath(path, index);\r\n    // });\r\n\r\n\r\n    window.requestAnimationFrame((time) => {\r\n        update(time, mobs);\r\n    });\r\n\r\n\r\n    // async function videoUpdate(isExecuted) {\r\n    //     const ctx = tmpCanvas.getContext('2d');\r\n    //     ctx.drawImage(video.current, 0, 0);\r\n    //     const contents = {\r\n    //         image: ctx.getImageData(0, 0, imageSize.width, imageSize.height),\r\n    //         isExecuted: isExecuted,\r\n    //     };\r\n\r\n\r\n    //     worker.postMessage(contents);\r\n\r\n    // }\r\n\r\n    function createMotionFrame() {\r\n        const motionFrame = new paper.Path.Rectangle(paper.view.bounds.width - imageSize.width, paper.view.bounds.height - imageSize.height, imageSize.width, imageSize.height);\r\n        motionFrame.fillColor = \"white\";\r\n        const size = [120, 80];\r\n\r\n\r\n        const down = new paper.Path.Rectangle([motionFrame.bounds.x, motionFrame.bounds.y + 35], size);\r\n        down.fillColor = \"red\";\r\n\r\n        const straight = new paper.Path.Rectangle([motionFrame.bounds.x + motionFrame.bounds.width / 3 + 10, motionFrame.bounds.y + 35], [size[0] - 20, size[1]]);\r\n        straight.fillColor = \"green\";\r\n\r\n        const up = new paper.Path.Rectangle([motionFrame.bounds.x + motionFrame.bounds.width * (2 / 3), motionFrame.bounds.y + 35], size);\r\n        up.fillColor = \"blue\";\r\n\r\n        const leftReverse = new paper.Path.Rectangle([motionFrame.bounds.x, motionFrame.bounds.y], [30, 240]);\r\n        leftReverse.fillColor = \"yellow\";\r\n\r\n        const rightReverse = new paper.Path.Rectangle([motionFrame.bounds.x + motionFrame.bounds.width - 30, motionFrame.bounds.y], [30, 240]);\r\n        rightReverse.fillColor = \"pink\";\r\n\r\n\r\n\r\n        return { motionFrame: motionFrame, down: down, straight: straight, up: up, leftReverse: leftReverse, rightReverse: rightReverse };\r\n    }\r\n\r\n\r\n    function createMotion() {\r\n\r\n        const leftKnee = paper.Path.Circle([motionFrame.bounds.centerX, motionFrame.bounds.centerY], 3);\r\n        leftKnee.selected = true;\r\n\r\n\r\n        const rightKnee = paper.Path.Circle([motionFrame.bounds.centerX, motionFrame.bounds.centerY], 3);\r\n        rightKnee.selected = true;\r\n\r\n\r\n\r\n        return {\r\n            leftKnee: leftKnee, rightKnee: rightKnee\r\n        };\r\n    }\r\n\r\n\r\n\r\n    // for walk recognition by movenet\r\n    // worker.onmessage = (event) => {\r\n    //     receievedKeyPoints = event.data;\r\n    //     if (receievedKeyPoints) {\r\n\r\n    //         leftKnee.bounds.centerX = motionFrame.bounds.x + (imageSize.width - receievedKeyPoints.keypoints[13].x);\r\n    //         leftKnee.bounds.centerY = motionFrame.bounds.y + receievedKeyPoints.keypoints[13].y + 20;\r\n\r\n    //         rightKnee.bounds.centerX = motionFrame.bounds.x + (imageSize.width - receievedKeyPoints.keypoints[14].x);\r\n    //         rightKnee.bounds.centerY = motionFrame.bounds.y + receievedKeyPoints.keypoints[14].y + 20;\r\n\r\n\r\n    //         if (firstPosition === 0) {\r\n    //             firstPosition = leftKnee.bounds.centerY;\r\n    //         }\r\n\r\n    //         if (up.intersects(leftKnee) || up.contains(leftKnee) || up.isInside(leftKnee)) {\r\n    //             movement = \"up\";\r\n    //             state.left = true;\r\n    //         }\r\n    //         if (straight.intersects(leftKnee) || straight.contains(leftKnee) || straight.isInside(leftKnee)) {\r\n    //             movement = \"straight\";\r\n    //             state.left = true;\r\n    //         }\r\n    //         if (down.intersects(leftKnee) || down.contains(leftKnee) || down.isInside(leftKnee)) {\r\n    //             movement = \"down\";\r\n    //             state.left = true;\r\n    //         }\r\n\r\n    //         if (up.intersects(rightKnee) || up.contains(rightKnee) || up.isInside(rightKnee)) {\r\n    //             state.right = true;\r\n    //         }\r\n    //         if (straight.intersects(rightKnee) || straight.contains(rightKnee) || straight.isInside(rightKnee)) {\r\n    //             state.right = true;\r\n    //         }\r\n    //         if (down.intersects(rightKnee) || down.contains(rightKnee) || down.isInside(rightKnee)) {\r\n    //             state.right = true;\r\n    //         }\r\n\r\n\r\n    //         if (leftReverse.intersects(leftKnee) || leftReverse.contains(leftKnee) || leftReverse.isInside(leftKnee)) {\r\n    //             myCharacter.setReverse(false);\r\n    //             isReverse = false;\r\n    //         }\r\n\r\n    //         if (rightReverse.intersects(rightKnee) || rightReverse.contains(rightKnee) || rightKnee.isInside(rightKnee)) {\r\n    //             myCharacter.setReverse(true);\r\n    //             isReverse = true;\r\n    //         }\r\n\r\n    //         if (state.left && state.right) {\r\n    //             countWalk += 0.5;\r\n    //             state.left = false;\r\n    //             state.right = false;\r\n    //             if (countWalk === 1) {\r\n    //                 countWalk = 0;\r\n    //                 // move the fish! keyboard == true\r\n    //                 if (movement === \"up\") {\r\n    //                     if (isReverse) {\r\n    //                         userState.keys[\"ArrowUp\"] = true;\r\n    //                         userState.keys[\"ArrowRight\"] = true;\r\n    //                     } else {\r\n    //                         userState.keys[\"ArrowUp\"] = true;\r\n    //                         userState.keys[\"ArrowLeft\"] = true;\r\n    //                     }\r\n\r\n    //                 } else if (movement === \"straight\") {\r\n    //                     if (isReverse) {\r\n    //                         userState.keys[\"ArrowRight\"] = true;\r\n    //                     } else {\r\n    //                         userState.keys[\"ArrowLeft\"] = true;\r\n    //                     }\r\n\r\n    //                 } else if (movement === \"down\") {\r\n    //                     if (isReverse) {\r\n    //                         userState.keys[\"ArrowDown\"] = true;\r\n    //                         userState.keys[\"ArrowRight\"] = true;\r\n    //                     } else {\r\n    //                         userState.keys[\"ArrowDown\"] = true;\r\n    //                         userState.keys[\"ArrowLeft\"] = true;\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n\r\n    //         screen1.content = `saying : ${movement} state : ${state.left} ${state.right} walk ${countWalk}`;\r\n    //         screen1.fontSize = 40;\r\n    //         screen1.bounds.center = [mapSize[0] / 4, mapSize[1] / 4];\r\n\r\n\r\n    //     }\r\n    // };\r\n\r\n    function updateTimerAndPhrasePosition(tx, ty, transparentBackground, phrase) {\r\n        const { resizedWidth, resizedHeight } = screenResized();\r\n        timer.bounds.topLeft.x += -resizedWidth / 2;\r\n        timer.bounds.topLeft.y += -resizedHeight / 2;\r\n\r\n        transparentBackground.bounds.topLeft.x = timer.bounds.topLeft.x - 20;\r\n        transparentBackground.bounds.topLeft.y = timer.bounds.topLeft.y - 10;\r\n\r\n        phrase.bounds.center.x = timer.bounds.topLeft.x - 20 + (window.innerWidth / 2);\r\n        phrase.bounds.center.y = timer.bounds.topLeft.y - 10 + ((window.innerHeight + 40) / 2);\r\n\r\n\r\n        window.requestAnimationFrame(() => updateTimerAndPhrasePosition(tx, ty, transparentBackground, phrase));\r\n    }\r\n\r\n\r\n    async function update(time, mobs) {\r\n\r\n        // Control mob size as time goes\r\n        // console.log(time);\r\n        const { minMobSize, maxMobSize } = controlMobSize(time / 1000);\r\n\r\n        // Create mobs every 5 sec and the limitation of number of mobs is 50\r\n        if (prevTime + 500 < time && mobs.length < 60) {\r\n            prevTime = time;\r\n            console.log(\"created\", mobs.length);\r\n            const randomPlace = Math.floor(Math.random() * 12);\r\n            const randomSize = Math.floor(Math.random() * (maxMobSize - minMobSize)) + minMobSize;\r\n            const mob = new Mob1({ x: paths[randomPlace][0][0].x, y: paths[randomPlace][0][0].y }, true, randomSize);\r\n            mob.selectedPath = randomPlace;\r\n            mobs.push(mob);\r\n        }\r\n\r\n\r\n        if (mobs.length === 50) {\r\n            mobs = mobs.filter(function (mob, index) {\r\n                if (index < 15) {\r\n                    mob.group.remove();\r\n                    mob.removeSizeTag();\r\n                    return;\r\n                }\r\n\r\n                return mob;\r\n            });\r\n        }\r\n\r\n\r\n        // Move mob fishes following the path made by bezier curves\r\n        mobs = mobs.map(function (mob) {\r\n            const prevMobPosition = { x: mob.group.bounds.centerX, y: mob.group.bounds.centerY, speed: 0.003, t: mob.t };\r\n            const prevX = prevMobPosition.x;\r\n            const prevY = prevMobPosition.y;\r\n            const mobMovedPosition = moveMobInBezierCurve(paths[mob.selectedPath][mob.currentPoint], prevMobPosition);\r\n            mob.t = mobMovedPosition.t;\r\n            mob.group.bounds.centerX = mobMovedPosition.x;\r\n            mob.group.bounds.centerY = mobMovedPosition.y;\r\n\r\n            // Get movement angle of mob fish and turn the mob's head toward the angle\r\n            const mobMovementAngle = getMovementAngle(prevX, prevY, mobMovedPosition.x, mobMovedPosition.y);\r\n            if ((mobMovementAngle <= 90 && mobMovementAngle >= 0) || (mobMovementAngle >= -90 && mobMovementAngle <= 0)) {\r\n                mob.setReverse(true);\r\n            } else if ((mobMovementAngle > 90 && mobMovementAngle) <= 180 || (mobMovementAngle < -90 && mobMovementAngle >= -180)) {\r\n                mob.setReverse(false);\r\n            }\r\n\r\n            if (mob.t > 1) {\r\n                mob.t = 0;\r\n                mob.currentPoint = paths[mob.selectedPath].length - 1 !== mob.currentPoint ? mob.currentPoint + 1 : 0;\r\n            }\r\n\r\n\r\n\r\n            return mob;\r\n        });\r\n\r\n\r\n\r\n        // when control is by motion recognition\r\n        // send video image to worker\r\n        // if (mode === \"exercise\") {\r\n        //     await videoUpdate(isExecuted);\r\n        //     isExecuted = true;\r\n        // }\r\n\r\n\r\n\r\n\r\n        // Recognize key board input\r\n        if (userState.keys[\"ArrowUp\"] || userState.keys[\"w\"]) {\r\n            if (userState.velY > -userState.speed) {\r\n                userState.velY--;\r\n            }\r\n        }\r\n        if (userState.keys[\"ArrowDown\"] || userState.keys[\"s\"]) {\r\n            if (userState.velY < userState.speed) {\r\n                userState.velY++;\r\n            }\r\n        }\r\n        if (userState.keys[\"ArrowRight\"] || userState.keys[\"d\"]) {\r\n            myCharacter.setReverse(true);\r\n            if (userState.velX < userState.speed) {\r\n                userState.velX++;\r\n            }\r\n        }\r\n        if (userState.keys[\"ArrowLeft\"] || userState.keys[\"a\"]) {\r\n            myCharacter.setReverse(false);\r\n            if (userState.velX > -userState.speed) {\r\n                userState.velX--;\r\n            }\r\n        }\r\n\r\n        const nextPosition = myCharacter.getPosition();\r\n\r\n\r\n        // move as pressing keyboard arrow buttons\r\n        userState.velY *= userState.friction;\r\n        nextPosition.y += userState.velY;\r\n\r\n        userState.velX *= userState.friction;\r\n        nextPosition.x += userState.velX;\r\n\r\n\r\n\r\n        let isXChanged = false;\r\n        let isYChanged = false;\r\n\r\n\r\n\r\n        // when contacting to obstacles, user's fish stops moving toward obstacles\r\n        // detect where the user fish bumped into the obstacles\r\n        obstacles = obstacles.map(function (obstacle) {\r\n            for (let pathItem of myCharacter.group.getItems()) {\r\n                const point = obstacle.group.getItem().getIntersections(pathItem)[0];\r\n                if (point) {\r\n                    if (point.point.x - nextPosition.x > 0) {\r\n                        nextPosition.x = nextPosition.x - 2;\r\n                        userState.velX -= 2;\r\n                        isXChanged = true;\r\n                    }\r\n                    if (point.point.x - nextPosition.x < 0) {\r\n                        nextPosition.x = nextPosition.x + 2;\r\n                        userState.velX += 2;\r\n                        isXChanged = true;\r\n                    }\r\n\r\n                    if (point.point.y - nextPosition.y > 0) {\r\n                        nextPosition.y = nextPosition.y - 2;\r\n                        userState.velY -= 2;\r\n                        isYChanged = true;\r\n                    }\r\n\r\n                    if (point.point.y - nextPosition.y < 0) {\r\n                        nextPosition.y = nextPosition.y + 2;\r\n                        userState.velY += 2;\r\n                        isYChanged = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n            return obstacle;\r\n\r\n        });\r\n\r\n        // If x or y has been changed by bumping into objects\r\n        // then makes the user's velocity to zero\r\n        if (isXChanged) {\r\n            userState.velX = 0;\r\n        }\r\n        if (isYChanged) {\r\n            userState.velY = 0;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        /* Motion Recognition Section */\r\n        if (mode === \"exercise\") {\r\n            // Fix motion frame position to right bottom\r\n            motionFrame.bounds.x = 1600 - paper.view.matrix.tx;\r\n            motionFrame.bounds.y = 840 - paper.view.matrix.ty;\r\n            down.bounds.x = motionFrame.bounds.x;\r\n            down.bounds.y = motionFrame.bounds.y + 35;\r\n            straight.bounds.x = motionFrame.bounds.x + motionFrame.bounds.width / 3 + 10;\r\n            straight.bounds.y = motionFrame.bounds.y + 35;\r\n            up.bounds.x = motionFrame.bounds.x + motionFrame.bounds.width * (2 / 3);\r\n            up.bounds.y = motionFrame.bounds.y + 35;\r\n            leftReverse.bounds.x = motionFrame.bounds.x;\r\n            leftReverse.bounds.y = motionFrame.bounds.y;\r\n            rightReverse.bounds.x = motionFrame.bounds.x + motionFrame.bounds.width - 30;\r\n            rightReverse.bounds.y = motionFrame.bounds.y;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // If mob is bigger than user's then game over\r\n        // If not user's can eat mob and grow bigger\r\n        mobs = mobs.filter(function (mob) {\r\n            const isIntersects = myCharacter.group.intersects(mob.group);\r\n            if (isIntersects) {\r\n                if (mob.size <= myCharacter.size) {\r\n                    console.log(\"You can eat!\", myCharacter.size, mob.size);\r\n                    if (myCharacter.size <= 70) {\r\n                        myCharacter.setSize(myCharacter.size + mob.size * 0.05);\r\n                    } else if (70 < myCharacter.size && myCharacter.size <= 130) {\r\n                        myCharacter.setSize(myCharacter.size + mob.size * 0.04);\r\n                    } else if (130 < myCharacter.size && myCharacter.size <= 180) {\r\n                        myCharacter.setSize(myCharacter.size + mob.size * 0.03);\r\n                    } else if (180 < myCharacter.size && myCharacter.size <= 250) {\r\n                        myCharacter.setSize(myCharacter.size + mob.size * 0.005);\r\n                    } else if (250 < myCharacter.size) {\r\n                        myCharacter.setSize(myCharacter.size + mob.size * 0.002);\r\n                    }\r\n                    mob.group.remove();\r\n                    mob.removeSizeTag();\r\n                    return;\r\n                } else {\r\n                    mob.size += myCharacter.size * 0.05;\r\n                    myCharacter.group.remove();\r\n                    myCharacter.removeSizeTag();\r\n                    gameOver = true;\r\n                    return mob;\r\n                }\r\n            } else {\r\n                return mob;\r\n            }\r\n\r\n        });\r\n\r\n\r\n        // when meeding hiders, for example seaweed where can hide fishes including your fish\r\n        // make mob or user can hide into seaweed\r\n        hiders = hiders.map(function (hider) {\r\n            if (hider.group.bounds.contains(myCharacter.group.bounds)) {\r\n                hideTime = time + 0.001;\r\n            }\r\n\r\n            for (let mob of mobs) {\r\n                if (hider.group.bounds.contains(mob.group.bounds)) {\r\n                    mob.hideTime = time + 0.001;\r\n\r\n                }\r\n            }\r\n\r\n            return hider;\r\n        });\r\n\r\n        // if user fish hidden duration has just passed\r\n        // then user fish should be visible\r\n        // else user fish sohould be invisible\r\n        if (hideTime < time) {\r\n            myCharacter.group.visible = true;\r\n        } else {\r\n            myCharacter.group.visible = false;\r\n        }\r\n\r\n\r\n        // if mob fish's hidden duration has just passed\r\n        // then mob fish should be visible\r\n        // else user fish should be invisible\r\n        mobs = mobs.map(function (mob) {\r\n            if (mob.hideTime < time) {\r\n                mob.group.visible = true;\r\n                mob.sizeTag.visible = true;\r\n            } else {\r\n                mob.group.visible = false;\r\n                mob.sizeTag.visible = false;\r\n            }\r\n\r\n            return mob;\r\n        });\r\n\r\n\r\n        // when user fish meets attacters like sea anemone, their size is decreased\r\n        // then make user fish smaller and bounced away from sea anemone\r\n        attackers.map(function (attacker) {\r\n            if (attacker.group.contains(myCharacter.group.bounds) || attacker.group.intersects(myCharacter.group.bounds)) {\r\n                myCharacter.setSize(myCharacter.size - 1);\r\n                userState.velX = userState.velX < userState.speed ? -userState.velX * 1.1 : -userState.velX * 0.9;\r\n                userState.velY = userState.velY < userState.speed ? -userState.velY * 1.1 : -userState.velY * 0.9;\r\n            }\r\n        });\r\n\r\n        // Stop movement by motion recognition\r\n        if (mode === \"exercise\") {\r\n            userState.keys[\"ArrowDown\"] = false;\r\n            userState.keys[\"ArrowUp\"] = false;\r\n            userState.keys[\"ArrowLeft\"] = false;\r\n            userState.keys[\"ArrowRight\"] = false;\r\n        }\r\n\r\n\r\n        // Move sizetag to fishes position\r\n        // user\r\n        myCharacter.moveSizeTag();\r\n        // mob\r\n        mobs = mobs.map(function (mob) {\r\n            mob.moveSizeTag();\r\n            return mob;\r\n        });\r\n\r\n\r\n\r\n        // move screen when user fish gets a border of virtual Rectangle\r\n        const { tx, ty } = getMatrix(myCharacter.group.bounds.center.x, myCharacter.group.bounds.center.y, myCharacter.rx, myCharacter.ry);\r\n        myCharacter.rx = myCharacter.group.bounds.center.x;\r\n        myCharacter.ry = myCharacter.group.bounds.center.y;\r\n        paper.view.translate([-tx, -ty]);\r\n\r\n        timer = updateAndFixTimer(timer, time, tx, ty);\r\n        const { resizedWidth, resizedHeight } = screenResized();\r\n        timer.bounds.topLeft.x += -resizedWidth / 2;\r\n        timer.bounds.topLeft.y += -resizedHeight / 2;\r\n\r\n        const { gameOverState, loseTransparentBackground, gameOverPhrase } = isGameOver(gameOver, timer, myCharacter);\r\n        gameOver = gameOverState;\r\n        const { gameWinState, winTransparentBackground, gameWinPhrase } = isGameWin(gameWin, timer, myCharacter);\r\n        gameWin = gameWinState;\r\n\r\n        console.log(loseTransparentBackground, gameOverPhrase);\r\n        // Check if it is game over or not\r\n        // if game over is true then stop game and lose game\r\n        if (gameOver) {\r\n            window.cancelAnimationFrame((time) => { update(time, mobs); });\r\n            window.requestAnimationFrame(() => updateTimerAndPhrasePosition(tx, ty, loseTransparentBackground, gameOverPhrase));\r\n        } else if (gameWin) {\r\n            window.cancelAnimationFrame((time) => { update(time, mobs); });\r\n            window.requestAnimationFrame(() => updateTimerAndPhrasePosition(tx, ty, winTransparentBackground, gameWinPhrase));\r\n        } else {\r\n            window.requestAnimationFrame((time) => { update(time, mobs); });\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { startyMovementHandler, gameStart };","import { v4 as uuidv4 } from \"uuid\";\r\nimport { startyMovementHandler } from \"./CharactersEvent\";\r\nimport paper from \"paper\";\r\n\r\n// Starty(fish character in game) class\r\nfunction Starty (center, isReverse = false, size) {\r\n    this.head = { x: center.x - 100, y: center.y };\r\n    this.group = new paper.Group();\r\n    this.isReverse = isReverse;\r\n    this.id = uuidv4();\r\n    this.ratio = { width: 1, height: 0.378306 };\r\n    this.size = size;\r\n    this.rx = center.x;\r\n    this.ry = center.y;\r\n\r\n    this.constructor = function () {\r\n        this.group = new paper.Group();\r\n        const startyBody = this._makeBody();\r\n        const startyTail = this._makeTail();\r\n        const startyFin = this._makeFin();\r\n        const { startyEye, startyPupil } = this._makeEyeAndPupil();\r\n        const startyMouth = this._makeMouth();\r\n        this.sizeTag = this._makeSizeTag();\r\n        \r\n        \r\n        this.group.addChild(startyBody);\r\n        this.group.addChild(startyTail);\r\n        this.group.addChild(startyFin);\r\n        this.group.addChild(startyEye);\r\n        this.group.addChild(startyPupil);\r\n        this.group.addChild(startyMouth);\r\n        this._makeBodyFin();\r\n        this._makeTailFin();\r\n\r\n\r\n        this.group.bounds.width = this.ratio.width * this.size;\r\n        this.group.bounds.height = this.ratio.height * this.size;\r\n        this.group.position.x = center.x;\r\n        this.group.position.y = center.y;\r\n\r\n\r\n    \r\n        // Setup character movement handler\r\n        document.body.addEventListener(\"keydown\", (event) => startyMovementHandler(event));\r\n        document.body.addEventListener('keyup', (event) => startyMovementHandler(event));\r\n    };\r\n\r\n\r\n    this.getPosition = function () {\r\n        return this.group.position;\r\n    };\r\n\r\n    this.setPosition = function (point) {\r\n        this.group.position.x = point.x;\r\n        this.group.position.y = point.y;\r\n    };\r\n\r\n    this.setSize = function (size) {\r\n        this.group.bounds.width = this.ratio.width * size;\r\n        this.group.bounds.height = this.ratio.height * size;\r\n        this.size = size;\r\n    };\r\n\r\n    this.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    this.setReverse = function (isReverse) {\r\n        // isReverse === true -> arrowRight, \r\n        if ((isReverse && !this.isReverse) || (!isReverse && this.isReverse)) {\r\n            this.group.scale(-1, 1);\r\n        } else {\r\n            this.group.scale(1, 1);\r\n        }\r\n\r\n        this.isReverse = isReverse;\r\n    };\r\n\r\n    this.getReverse = function () {\r\n        return this.isReverse;\r\n    };\r\n\r\n\r\n    this._makeBody = function () {\r\n        const startyBody = new paper.Path([this.head.x, this.head.y], [this.head.x + 160, this.head.y + 10], [this.head.x + 160, this.head.y - 10], [this.head.x, this.head.y]);\r\n        startyBody.curves[0].handle1.y = 45;\r\n        startyBody.curves[0].handle2.y = 15;\r\n        startyBody.curves[2].handle2.y = -45;\r\n        startyBody.curves[2].handle1.y = -15;\r\n        startyBody.fillColor = \"#31E1F7\";\r\n        startyBody.strokeColor = \"black\";\r\n        startyBody.strokeWidth = 3;\r\n        startyBody.closed = true;\r\n\r\n        return startyBody;\r\n\r\n\r\n    };\r\n\r\n\r\n    this._makeTail = function () {\r\n\r\n        const startyTail = new paper.Path([this.head.x + 160, this.head.y - 10], [this.head.x + 200, this.head.y - 30], [this.head.x + 200, this.head.y + 30], [this.head.x + 160, this.head.y + 10]);\r\n        startyTail.fillColor = \"#D800A6\";\r\n        startyTail.strokeColor = \"black\";\r\n        startyTail.strokeWidth = 3;\r\n        startyTail.closed = true;\r\n        startyTail.curves[0].handle1.y = -5;\r\n        startyTail.curves[2].handle1.y = 5;\r\n        return startyTail;\r\n\r\n\r\n    };\r\n\r\n    this._makeFin = function () {\r\n\r\n        const startyFin = new paper.Path([this.head.x + 45, this.head.y - 26], [this.head.x + 70, this.head.y - 45], [this.head.x + 140, this.head.y - 20], [this.head.x + 45, this.head.y - 26]);\r\n        startyFin.fillColor = \"#D800A6\";\r\n        startyFin.strokeColor = \"black\";\r\n        startyFin.strokeWidth = 3;\r\n        startyFin.curves[0].handle2.y = 10;\r\n        startyFin.curves[2].handle1.y = -2;\r\n        startyFin.curves[2].handle2.y = -3;\r\n\r\n        return startyFin;\r\n\r\n\r\n    };\r\n\r\n    this._makeEyeAndPupil = function () {\r\n\r\n        // Declare eye and pupil variables\r\n        let startyEye, startyPupil;\r\n\r\n        // check if reverse left and right or not\r\n        startyEye = new paper.Path.Circle([this.head.x + 20, this.head.y - 6], 8);\r\n        startyPupil = new paper.Path([startyEye.position.x - 3, startyEye.position.y + 2], [startyEye.position.x + 3, startyEye.position.y + 2]);\r\n\r\n\r\n        // Set up style of eye\r\n        startyEye.fillColor = \"white\";\r\n        startyEye.strokeColor = \"black\";\r\n        startyEye.strokeWidth = 3;\r\n\r\n        // Set up style of pupil\r\n        startyPupil.strokeColor = \"black\";\r\n        startyPupil.strokeWidth = 2;\r\n        startyPupil.curves[0].handle1.y = -5;\r\n        startyPupil.curves[0].handle2.y = -5;\r\n\r\n        return { startyEye: startyEye, startyPupil: startyPupil };\r\n    };\r\n\r\n    this._makeMouth = function () {\r\n        let startyMouth;\r\n\r\n        startyMouth = new paper.Path([this.head.x + 3.5, this.head.y + 10], [this.head.x + 20, this.head.y + 10], [this.head.x + 12, this.head.y + 17], [this.head.x + 3.5, this.head.y + 10]);\r\n\r\n\r\n\r\n        startyMouth.curves[2].handle1.y = 2;\r\n        startyMouth.curves[2].handle2.y = 2;\r\n        startyMouth.strokeColor = \"black\";\r\n        startyMouth.strokeWidth = 2;\r\n        startyMouth.fillColor = \"#FF7777\";\r\n\r\n        return startyMouth;\r\n    };\r\n\r\n    this._makeBodyFin = function () {\r\n        const start = this.head.x + 55;\r\n        const end = this.head.x + 150;\r\n        const direction = 20;\r\n\r\n        for (let i = start; i < end; i += direction) {\r\n            const startyBodyFin = new paper.Path([i, this.head.y - 15], [i, this.head.y - 7], [i, this.head.y], [i, this.head.y + 8], [i, this.head.y + 15]);\r\n            startyBodyFin.curves.forEach(function (curve) {\r\n                curve.handle1.x = 5;\r\n                curve.handle2.x = 5;\r\n            });\r\n            startyBodyFin.strokeColor = \"black\";\r\n            startyBodyFin.strokeWidth = 2;\r\n            this.group.addChild(startyBodyFin);\r\n        }\r\n    };\r\n\r\n\r\n    this._makeTailFin = function () {\r\n        const point1X = this.head.x + 170;\r\n        const point2X = this.head.x + 190;\r\n\r\n        for (let i = -10; i <= 10; i += 5) {\r\n            const startyTailFin = new paper.Path([point1X, this.head.y + i], [point2X, this.head.y + i]);\r\n            startyTailFin.strokeWidth = 2;\r\n            startyTailFin.strokeColor = \"black\";\r\n            startyTailFin.rotate(i * 2, startyTailFin.bounds.bottomLeft);\r\n\r\n            this.group.addChild(startyTailFin);\r\n\r\n        }\r\n    };\r\n\r\n    this._makeSizeTag = function(){\r\n        const sizeTag = new paper.PointText();\r\n        sizeTag.fillColor = \"black\";\r\n        sizeTag.fontSize = 18;\r\n        sizeTag.fontFamily = \"'Dangrek', cursive\";\r\n        sizeTag.content = size.toString();\r\n\r\n        return sizeTag;\r\n    }\r\n\r\n    this.moveSizeTag = function(){\r\n        this.sizeTag.bounds.center.x = this.group.bounds.topCenter.x;\r\n        this.sizeTag.bounds.center.y = this.group.bounds.topCenter.y - 15;\r\n        this.sizeTag.content = this.size.toFixed(2).toString();\r\n    }\r\n\r\n    this.removeSizeTag = function(){\r\n        this.sizeTag.remove();\r\n    }\r\n\r\n    this.constructor();\r\n}\r\n\r\n\r\n\r\n\r\nexport { Starty };","import paper from \"paper\";\r\n\r\nfunction Stone (x, y, size) {\r\n    this.group = new paper.Group();\r\n    this.stonePath = new paper.Path([x - 387.975, y + 24.385], [x - 377.975, y - 22.651], [x - 37.975, y - 125.651], [x + 362.025, y - 35.651], [x + 342.025, y + 74.349], [x - 32.975, y + 124.349], [x - 387.975, y + 24.385]);\r\n\r\n    // Setup the design and size of stone\r\n    this.constructor = function () {\r\n        this.stonePath.strokeColor = \"#595260\";\r\n        this.stonePath.strokeWidth = 10;\r\n        this.stonePath.strokeCap = \"round\";\r\n        this.stonePath.smooth();\r\n        this.stonePath.fillColor = \"#B2B1B9\";\r\n        this.stonePath.scale(size);\r\n        this.group.addChild(this.stonePath);\r\n    };\r\n\r\n    this.constructor();\r\n}\r\n\r\n\r\nfunction SideStone (x, y, degree, reverse, mapSize) {\r\n    this.group = new paper.Group();\r\n    this.stonePath = new paper.Path([0, mapSize[1] / 2], [0, 0], [20, 40], [70, 200], [100, 250], [130, 400], [200, 500], [300, 520], [500, 580], [600, 580], [700, 650], [800, 650], [900, 660], [1200, 800], [mapSize[0] / 2, mapSize[1] / 2]);\r\n\r\n\r\n    // Setup design and position and etc...\r\n    this.constructor = function () {\r\n        // Set color and stroke color and weight of storke\r\n        this.stonePath.fillColor = \"#B2B1B9\";\r\n        this.stonePath.strokeColor = \"#595260\";\r\n        this.stonePath.strokeWidth = 10;\r\n\r\n        // Connect the last point to first point\r\n        this.stonePath.closed = true;\r\n\r\n        // Make all points smooth\r\n        this.stonePath.smooth();\r\n\r\n        // Control the overscreen curves\r\n        this.controlOverscreenCurves();\r\n\r\n        // set rotate\r\n        this.stonePath.rotate(degree, 0);\r\n\r\n        // set poisition\r\n        this.stonePath.position.x = x;\r\n        this.stonePath.position.y = y;\r\n\r\n\r\n        // flip horizontally\r\n        if (reverse) {\r\n            this.stonePath.scale(-1, 1);\r\n        }\r\n\r\n        // Add Path to Group\r\n        this.group.addChild(this.stonePath);\r\n\r\n    };\r\n\r\n    // Setup curves of stones\r\n    this.controlOverscreenCurves = function () {\r\n\r\n\r\n        this.stonePath.curves[0].handle1.y = 0;\r\n        this.stonePath.curves[0].handle2.y = 0;\r\n        this.stonePath.curves[0].handle1.x = 0;\r\n        this.stonePath.curves[0].handle2.x = 0;\r\n        this.stonePath.curves[1].handle1.y = 10;\r\n        this.stonePath.curves[1].handle2.y = 5;\r\n        this.stonePath.curves[1].handle1.x = 5;\r\n        this.stonePath.curves[1].handle2.x = 0;\r\n        this.stonePath.curves[2].handle1.x = 70;\r\n        this.stonePath.curves[this.stonePath.curves.length - 2].handle1.x = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 2].handle1.y = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 2].handle2.x = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 2].handle2.y = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 1].handle1.x = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 1].handle1.y = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 1].handle2.x = 0;\r\n        this.stonePath.curves[this.stonePath.curves.length - 1].handle2.y = 0;\r\n\r\n    };\r\n\r\n\r\n\r\n    this.constructor();\r\n\r\n\r\n}\r\n\r\n\r\nexport default Stone;\r\nexport { SideStone };","import paper from \"paper\";\r\n\r\nfunction SeaAnemone (x, y, scale, degree) {\r\n    this.group = new paper.Group();\r\n\r\n\r\n    this.constructor = function () {\r\n        this.createBody();\r\n        this.createTentacle();\r\n        this.createBelly();\r\n\r\n\r\n        this.group.bounds.bottomCenter.x = x;\r\n        this.group.bounds.bottomCenter.y = y;\r\n\r\n        this.group.rotate(degree, this.group.bounds.bottomCenter);\r\n\r\n        this.group.scale(scale);\r\n    };\r\n\r\n\r\n    this.createBody = function () {\r\n        // Create body\r\n        const body = new paper.Path.Circle([40, 70], 30);\r\n        body.strokeColor = \"black\";\r\n        body.strokeWidth = 2;\r\n        body.removeSegment(3);\r\n        body.fillColor = \"#E46028\";\r\n        body.curves[2].handle1.y = 30;\r\n        body.curves[2].handle2.y = 30;\r\n        this.group.addChild(body);\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    this.createTentacle = function () {\r\n        const tentacle = new paper.Path([65, 80], [67, 20], [60, 10], [50, 30], [50, 80]);\r\n        tentacle.strokeColor = \"black\";\r\n        tentacle.strokeWidth = 2;\r\n        tentacle.smooth();\r\n        tentacle.fillColor = \"#FF8642\";\r\n        tentacle.position.x = 40;\r\n        tentacle.position.y = 10;\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            const tentaclone = tentacle.clone();\r\n            tentaclone.bounds.height *= 0.7;\r\n            if (i === 3) {\r\n                tentaclone.rotate(i * 36, [tentacle.bounds.bottomCenter.x - 5, tentacle.bounds.bottomCenter.y - 10]);\r\n            }\r\n            else if (i === 4) {\r\n                tentaclone.rotate(i * 36, [tentacle.bounds.bottomCenter.x - 2, tentacle.bounds.bottomCenter.y - 15]);\r\n            } else if (i === 5) {\r\n                tentaclone.rotate(i * 36, [tentacle.bounds.bottomCenter.x, tentacle.bounds.bottomCenter.y - 15]);\r\n            } else if (i === 6) {\r\n                tentaclone.rotate(i * 36, [tentacle.bounds.bottomCenter.x + 2, tentacle.bounds.bottomCenter.y - 15]);\r\n            }\r\n            else if (i === 7) {\r\n                tentaclone.rotate(i * 36, [tentacle.bounds.bottomCenter.x + 8, tentacle.bounds.bottomCenter.y - 17]);\r\n            }\r\n            else {\r\n                tentaclone.rotate(i * 36, tentacle.bounds.bottomCenter);\r\n            }\r\n\r\n            this.group.addChild(tentaclone);\r\n        }\r\n\r\n        tentacle.remove();\r\n    };\r\n\r\n\r\n    this.createBelly = function () {\r\n        const belly = new paper.Path.Circle([40, 40], 20);\r\n        belly.fillColor = \"#E36229\";\r\n        belly.strokeColor = \"black\";\r\n        belly.strokeWidth = 2;\r\n\r\n\r\n        this.group.addChild(belly);\r\n    };\r\n\r\n    this.constructor();\r\n\r\n\r\n\r\n}\r\n\r\nexport default SeaAnemone;","import paper from \"paper\";\r\n\r\n\r\n\r\nfunction Seaweed (x, y, scale, degree) {\r\n    this.group = new paper.Group();\r\n    this.path = new paper.Path([50, 100], [50, 60], [50, 20], [60, 20], [60, 60], [60, 100]);\r\n\r\n\r\n    this.constructor = function () {\r\n        this.path.strokeColor = \"black\";\r\n        this.path.strokeWidth = 2;\r\n        this.path.fillColor = \"#ACE094\";\r\n        this.path.curves[0].handle1.x = 10;\r\n        this.path.curves[0].handle2.x = 10;\r\n\r\n        this.path.curves[1].handle1.x = -10;\r\n        this.path.curves[1].handle2.x = -10;\r\n\r\n        this.path.curves[2].handle1.y = -2;\r\n        this.path.curves[2].handle2.y = -2;\r\n\r\n        this.path.curves[3].handle1.x = -10;\r\n        this.path.curves[3].handle2.x = -10;\r\n\r\n        this.path.curves[4].handle1.x = 10;\r\n        this.path.curves[4].handle2.x = 10;\r\n\r\n        for (let i = 1; i <= 10; i++) {\r\n            const clone = this.path.clone();\r\n            clone.position.x += i * 14;\r\n            this.group.addChild(clone);\r\n        }\r\n\r\n\r\n        this.group.addChild(this.path);\r\n\r\n\r\n        this.group.bounds.bottomCenter.x = x;\r\n        this.group.bounds.bottomCenter.y = y;\r\n\r\n\r\n        this.group.bounds.height *= scale;\r\n        this.group.rotate(degree, this.group.bounds.bottomCenter);\r\n    };\r\n\r\n    this.constructor();\r\n\r\n}\r\n\r\nexport default Seaweed;","import Stone, { SideStone } from \"./objects/rock\";\r\nimport SeaAnemone from \"./objects/SeaAnemone\";\r\nimport Seaweed from \"./objects/Seaweed\";\r\nimport paper from \"paper\";\r\n\r\nfunction testMap () {\r\n    // map Size setup\r\n    const mapSize = [3072, 1648];\r\n\r\n    const obstacles = [];\r\n\r\n\r\n    const rect = new paper.Path.Rectangle([0, -mapSize[1] / 2], [mapSize[0], mapSize[1]]);\r\n\r\n    rect.strokeColor = \"black\";\r\n    rect.strokeWidth = \"3\";\r\n\r\n\r\n    // setup center Stone\r\n    obstacles.push(new Stone(mapSize[0] / 2, 0, 2.5, paper));\r\n\r\n\r\n    // setup Stones at the 4 egdes of map\r\n    obstacles.push(new SideStone(mapSize[0] / 4, mapSize[1] / 4, 0, false, mapSize, paper));\r\n    obstacles.push(new SideStone(mapSize[0] * 0.75, mapSize[1] / 4, 0, true, mapSize, paper));\r\n    obstacles.push(new SideStone(mapSize[0] / 4, -mapSize[1] / 4, 180, true, mapSize, paper));\r\n    obstacles.push(new SideStone(mapSize[0] * 0.75, -mapSize[1] / 4, 180, false, mapSize, paper));\r\n\r\n\r\n\r\n\r\n\r\n    const attackers = [];\r\n\r\n    // Setup seaAnemons\r\n    attackers.push();\r\n    attackers.push(new SeaAnemone(500, 610, 1.5, 0));\r\n    attackers.push(new SeaAnemone(300, 550, 1, 0));\r\n    attackers.push(new SeaAnemone(990, 760, 1, 40));\r\n    attackers.push(new SeaAnemone(990, 230, 1, 180));\r\n    attackers.push(new SeaAnemone(550, 20, 0.8, 200));\r\n    attackers.push(new SeaAnemone(2200, 190, 0.8, 160));\r\n    attackers.push(new SeaAnemone(3030, 190, 1.2, 280));\r\n    attackers.push(new SeaAnemone(2550, 600, 2, 10));\r\n    attackers.push(new SeaAnemone(2350, -150, 2, 30));\r\n    attackers.push(new SeaAnemone(2350, -640, 2, 210));\r\n    attackers.push(new SeaAnemone(900, -700, 1.1, 140));\r\n    attackers.push(new SeaAnemone(900, -200, 2, -20));\r\n\r\n\r\n    const hiders = [];\r\n    hiders.push();\r\n\r\n    // Setup seaweeds\r\n    hiders.push(new Seaweed(700, 100, 1.2, 210));\r\n    hiders.push(new Seaweed(800, 650, 1.2, -20));\r\n    hiders.push(new Seaweed(90, 340, 1.2, 70));\r\n    hiders.push(new Seaweed(1600, 250, 1.2, 175));\r\n    hiders.push(new Seaweed(1750, 250, 1.2, 175));\r\n    hiders.push(new Seaweed(1540, 780, 1.5, 0));\r\n    hiders.push(new Seaweed(1540, -860, 1.5, 180));\r\n    hiders.push(new Seaweed(2700, -600, 1.3, 200));\r\n    hiders.push(new Seaweed(2800, 510, 1.3, -10));\r\n    hiders.push(new Seaweed(300, -560, 1.2, 170));\r\n    hiders.push(new Seaweed(660, -660, 1.2, 140));\r\n\r\n    return { mapSize: mapSize, obstacles: obstacles, attackers: attackers, hiders: hiders };\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default testMap;","async function videoSetting(video,cameraOptions,selectedIndex){\r\n    async function getCameraSelection(){\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n        const options = videoDevices.map(videoDevice => {\r\n            return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\r\n          });\r\n        return options;\r\n    }\r\n\r\n\r\n    if(selectedIndex === 0){\r\n        const options = await getCameraSelection();\r\n        cameraOptions.current.innerHTML = options.join('');\r\n    }\r\n\r\n\r\n\r\n    const selectedCamera = cameraOptions.current.options[selectedIndex].value;\r\n\r\n    const contraints = {\r\n        video: {\r\n            width: {\r\n              max: 320\r\n            },\r\n            height:{\r\n                max:240\r\n            }\r\n\r\n        },\r\n        deviceId:{\r\n            exact: selectedCamera\r\n        },\r\n          \r\n    };\r\n\r\n    const stream = await navigator.mediaDevices.getUserMedia(contraints);\r\n\r\n    video.current.srcObject = stream;\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\nexport default videoSetting;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Starty } from \"./Characters\";\r\nimport \"./css/game.css\";\r\nimport { gameStart } from \"./CharactersEvent\";\r\nimport testMap from \"./Maps\";\r\nimport videoSetting from \"./videoSetting\";\r\nimport paper from \"paper\";\r\n\r\nfunction Game () {\r\n    const video = useRef(null);\r\n    const cameraOptions = useRef(null);\r\n    const mode = window.location.href.split('/').at(-1);\r\n    const canvas = useRef(null);\r\n    const prevScreenSize = {width:0,height:0};\r\n\r\n    function handleCameraSelection (event) {\r\n        const selectedIndex = event.target.selectedIndex;\r\n        videoSetting(video, cameraOptions, selectedIndex);\r\n    }\r\n\r\n\r\n    function canvasSetup () {\r\n        // Setup canvas\r\n        paper.setup(canvas.current);\r\n\r\n        // Call map\r\n        const { mapSize, obstacles, attackers, hiders } = testMap();\r\n\r\n        // Call user character\r\n        const starty = new Starty({ x: window.screen.availWidth / 2, y: window.screen.availHeight / 2 }, false, 80);\r\n\r\n        // Game start\r\n        gameStart(mode, video, starty, mapSize, [], obstacles, attackers, hiders);\r\n\r\n        // Initialize view position \r\n        paper.view.translate([-(window.screen.availWidth - window.innerWidth)/2,-(window.screen.availHeight - window.innerHeight)/2]);\r\n\r\n        prevScreenSize.width = window.innerWidth;\r\n        prevScreenSize.height = window.innerHeight;\r\n    }\r\n\r\n    function handleResize(){\r\n        const resizedWidth = prevScreenSize.width - window.innerWidth;\r\n        const resizedHeight =prevScreenSize.height - window.innerHeight;\r\n\r\n        paper.view.translate([-resizedWidth / 2,-resizedHeight / 2]);\r\n       \r\n        prevScreenSize.width = window.innerWidth;\r\n        prevScreenSize.height = window.innerHeight;\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mode === \"exercise\") {\r\n            videoSetting(video, cameraOptions, 0);\r\n        }\r\n        canvasSetup();\r\n\r\n\r\n        window.addEventListener(\"resize\",()=>handleResize())\r\n    });\r\n\r\n    return (\r\n        <div style={ { width: window.screen.availWidth + \"px\", height: window.screen.availHeight + 40 + \"px\" } } className=\"game\" >\r\n            <canvas id=\"game-canvas\" ref={ canvas } ></canvas>\r\n            <video ref={ video } autoPlay></video>\r\n            <select onChange={ handleCameraSelection } ref={ cameraOptions } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Home from \"./Home/Home\";\r\nimport Game from \"./In-Game/Game\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App () {\r\n  return (\r\n    <Game />\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}